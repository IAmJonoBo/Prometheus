[build-system]
requires = ["poetry-core>=1.6.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "prometheus-os"
version = "0.1.0"
description = "Prometheus Strategy OS bootstrap"
readme = "README.md"
requires-python = ">=3.11,<3.14"
authors = [{ name = "Prometheus Contributors", email = "oss@example.com" }]
dependencies = [
  "argon2-cffi==25.1.0",
  "fastapi==0.118.0",
  "httpx==0.28.1",
  "numpy==2.3.2",
  "opensearch-py==3.0.0",
  "opentelemetry-sdk==1.37.0",
  "packaging==25.0",
  "prometheus-client==0.23.1",
  "qdrant-client==1.15.1",
  "rapidfuzz==3.13.0",
  "requests==2.32.5",
  "sentence-transformers==5.1.1",
  "temporalio==1.18.1",
  "torch==2.6.0",
  "trafilatura==2.0.0",
  "typer==0.19.2",
  "uvicorn[standard]==0.37.0",
]

[project.optional-dependencies]
governance = ["openfga-sdk>=0.9.0,<0.10.0", "python-keycloak>=5.0.0,<6.0.0"]
integrations = [
  "boto3>=1.35.0,<2.0.0",
  "cassandra-driver>=3.29.2,<4.0.0",
  "redis>=6.0.0,<7.0.0",
]
llm = [
  "llama-cpp-python>=0.3.0,<0.4.0; python_version < '3.12'",
  "sentencepiece>=0.2.0,<0.3.0",
]
observability = ["opentelemetry-exporter-otlp-proto-grpc>=1.37.0,<2.0.0"]
pii = [
  "marisa-trie==1.2.1",
  "presidio-analyzer>=2.2.352,<3.0.0",
  "presidio-anonymizer>=2.2.352,<3.0.0",
]
rag = [
  "dspy-ai>=3.0.3,<4.0.0; python_version < '3.14'",
  "haystack-ai>=2.18.0,<3.0.0",
  "mteb>=1.38.60,<2.0.0; python_version < '3.13'",
  "ragas>=0.3.0,<0.4.0",
  "trulens-eval>=2.4.0,<3.0.0",
]

[project.scripts]
prometheus-api = "api.main:run"
prometheus = "prometheus.cli:main"
prometheus-remediation = "prometheus.remediation:main"

[tool.poetry]
packages = [
  { include = "prometheus" },
  { include = "common" },
  { include = "ingestion" },
  { include = "retrieval" },
  { include = "reasoning" },
  { include = "decision" },
  { include = "execution" },
  { include = "monitoring" },
  { include = "model" },
  { include = "security" },
  { include = "governance" },
  { include = "collaboration" },
  { include = "observability" },
  { include = "sdk" },
  { include = "scripts" },
]

[tool.poetry.group.dev.dependencies]
check-jsonschema = "0.34.0"
google-yamlfmt = "0.17.2"
pytest = "8.4.2"
pytest-cov = "7.0.0"
pytest-asyncio = "1.2.0"
ruff = "0.13.3"
mypy = "^1.18.2"

[tool.ruff]
line-length = 88
target-version = "py312"
extend-exclude = ["vendor/"]

[tool.ruff.lint]
extend-select = ["B", "I", "S", "UP"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["S101"]

[tool.pytest.ini_options]
pythonpath = ["."]
addopts = "-q"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.bandit]
skips = ["B101"]

[tool.cibuildwheel]
build = ["cp311-*", "cp312-*"]
skip = ["pp*"]

[tool.cibuildwheel.linux]
archs = ["x86_64", "aarch64"]

[tool.cibuildwheel.macos]
archs = ["x86_64", "arm64"]

[tool.cibuildwheel.windows]
archs = ["AMD64"]
