# Dependency contract for Prometheus Strategy OS
# This file is authoritative for dependency orchestration automation.
# Managed manually until scripts/sync-dependencies.py is available.

[contract]
schema_version = "1.0.0"
status = "draft"
maintainer = "Dependency Steward Council"
slack_channel = "#dependency-stewards"
docs = [
  "docs/developer-experience.md#dependency-orchestration",
  "docs/quality-gates.md#dependency-controls",
  "docs/observability.md#dependency-telemetry",
]
default_review_days = 14
drift_escalation_days = 3
last_validated = "2025-10-02T00:00:00Z"

[[contract.sources]]
type = "poetry"
path = "pyproject.toml"
summary = "Primary source of truth for requested dependency ranges."

[[contract.sources]]
type = "constraints"
path = "constraints/production.txt"
summary = "Locked dependency graph for production artifacts."

[[contract.sources]]
type = "exports"
path = "dist/requirements.txt"
summary = "Pinned export consumed by CI test matrix."

[[contract.sources]]
type = "wheelhouse"
path = "vendor/wheelhouse/requirements.txt"
summary = "Offline wheel cache manifest."

[python]
supported = ">=3.11,<3.14"
build_matrix = ["ubuntu-22.04", "macos-14", "windows-2022"]
package_index = "https://pypi.org/simple"
approval_ticket = "PLAT-3921"

[policies.sdist_fallback]
mode = "deny"
review_days = 7
approval_ticket = "PLAT-4510"
notes = "Only allow sdists when upstream provides no wheel alternative."

[[policies.sdist_fallback.allow]]
name = "llama-cpp-python"
reason = "CPU builds still distribute sdists only."
expires = "2026-03-31"
owner = "model-strategy"

[[policies.sdist_fallback.allow]]
name = "pytrec-eval-terrier"
reason = "Manylinux baseline misalignment with guardrail."
expires = "2025-12-31"
owner = "retrieval"

[policies.network]
preflight_failure_mode = "error"
incident_contact = "dependency-stewards"
notes = "Network failures block dependency preflight unless an override is approved."

[policies.signatures]
required = true
keyring = "configs/signing/truststore.json"
enforced_artifacts = ["wheel", "sdist", "sbom"]
attestation_required = ["sbom"]
grace_period_days = 3
trusted_publishers = ["Prometheus Build Service"]
allow_unsigned_profiles = ["local-dev"]

[policies.updates]
default_update_window_days = 14
minor_update_window_days = 30
major_review_required = true
allow_transitive_conflicts = false
autoresolver_weight_recency = 3
autoresolver_weight_security = 5
autoresolver_weight_contract = 4
autoresolver_weight_success = 2

[[policies.updates.package_overrides]]
name = "numpy"
stay_on_major = 1
preferred_channel = "sdist"
notes = "Pin major due to ABI churn; allow minors when wheels available."

[[policies.updates.package_overrides]]
name = "torch"
stay_on_major = 2
preferred_channel = "wheel"
notes = "GPU build vetting required before major upgrades."

[[governance.snoozes]]
id = "rapidfuzz-wheel-gap"
scope = { package = "rapidfuzz", environment = "runtime" }
reason = "Awaiting upstream wheel release (RF-428)."
expires_at = "2025-10-10T00:00:00Z"
requested_by = "retrieval"
approver = "dependency-stewards"

[[governance.snoozes]]
id = "torch-gpu-alignment"
scope = { package = "torch", environment = "gpu-inference" }
reason = "Holding until signed CUDA builds land."
expires_at = "2025-11-01T00:00:00Z"
requested_by = "model-strategy"
approver = "security"

[environment_alignment]
default_sync_window_days = 7
alert_channel = "#dependency-stewards"

[[environment_alignment.environments]]
name = "api"
profiles = ["runtime"]
lockfiles = ["constraints/production.txt"]
model_registry = "model/registry.toml"
last_synced = "2025-09-28T00:00:00Z"
sync_window_days = 5
requires_signatures = true

[[environment_alignment.environments]]
name = "worker"
profiles = ["runtime"]
lockfiles = ["constraints/production.txt"]
model_registry = "model/registry.toml"
last_synced = "2025-09-18T00:00:00Z"
sync_window_days = 10
requires_signatures = true

[[ownership.teams]]
id = "dependency-stewards"
display_name = "Dependency Steward Council"
slack_channel = "#dependency-stewards"
pagerduty = "dependency-primary"
responsibilities = [
  "contract-governance",
  "exception-approvals",
  "sentinel-operations",
]

[[ownership.teams]]
id = "platform-core"
display_name = "Platform Core Guild"
slack_channel = "#runtime-platform"
pagerduty = "runtime-primary"
responsibilities = ["runtime-builds", "packaging-hygiene", "cli-tooling"]

[[ownership.teams]]
id = "observability"
display_name = "Observability Guild"
slack_channel = "#observability"
pagerduty = "telemetry-primary"
responsibilities = ["otel-instrumentation", "metrics-slo", "sentinel-reporting"]

[[ownership.teams]]
id = "model-strategy"
display_name = "Model Strategy Guild"
slack_channel = "#model-strategy"
pagerduty = "model-primary"
responsibilities = ["embedding-stack", "torch-governance", "gpu-profiling"]

[[ownership.teams]]
id = "retrieval"
display_name = "Retrieval Guild"
slack_channel = "#retrieval"
pagerduty = "retrieval-primary"
responsibilities = ["hybrid-search", "vector-store", "reranking"]

[[ownership.teams]]
id = "api-platform"
display_name = "API Platform Guild"
slack_channel = "#api-platform"
pagerduty = "api-primary"
responsibilities = ["fastapi-surface", "client-sdks", "ingress-guardrails"]

[[ownership.teams]]
id = "security"
display_name = "Security Guild"
slack_channel = "#security"
pagerduty = "security-primary"
responsibilities = ["pii-controls", "signing", "supply-chain-audits"]

[[ownership.teams]]
id = "integrations"
display_name = "Integrations Guild"
slack_channel = "#integrations"
pagerduty = "integrations-primary"
responsibilities = ["external-apis", "data-pipelines", "partner-support"]

[profiles]
default_review_days = 14

[profiles.runtime]
owner = "platform-core"
description = "Baseline dependencies installed in every runtime image."
environments = ["api", "worker", "cli"]
review_days = 14

[[profiles.runtime.packages]]
name = "opentelemetry-sdk"
constraint = ">=1.37.0,<2.0.0"
locked = "1.37.0"
tier = "core"
owner = "observability"
intent = "Tracing instrumentation for pipeline spans."
review_days = 14
sources = [
  "pyproject.toml::[project.dependencies]",
  "constraints/production.txt::opentelemetry-sdk==1.37.0",
]

[[profiles.runtime.packages]]
name = "prometheus-client"
constraint = ">=0.23.1,<0.24.0"
locked = "0.23.1"
tier = "core"
owner = "observability"
intent = "Metric endpoint exposure for API and workers."
review_days = 30
sources = [
  "pyproject.toml::[project.dependencies]",
  "constraints/production.txt::prometheus-client==0.23.1",
]

[[profiles.runtime.packages]]
name = "qdrant-client"
constraint = ">=1.15.1,<2.0.0"
locked = "1.15.1"
tier = "core"
owner = "retrieval"
intent = "Vector store connectivity for retrieval stage."
review_days = 30
sources = [
  "pyproject.toml::[project.dependencies]",
  "constraints/production.txt::qdrant-client==1.15.1",
]

[[profiles.runtime.packages]]
name = "rapidfuzz"
constraint = ">=3.14.1,<4.0.0"
locked = "3.13.0"
tier = "core"
owner = "retrieval"
intent = "Lexical scoring and reranking heuristics."
review_days = 7
status = "drift"
notes = "Waiting on macOS wheels; follow upstream RF-428 for >=3.14.1."
sources = [
  "pyproject.toml::[project.dependencies]",
  "constraints/production.txt::rapidfuzz==3.13.0",
]

[[profiles.runtime.packages]]
name = "requests"
constraint = ">=2.32.5,<3.0.0"
locked = "2.32.5"
tier = "supporting"
owner = "integrations"
intent = "HTTP client for third-party integrations."
review_days = 30
sources = [
  "pyproject.toml::[project.dependencies]",
  "constraints/production.txt::requests==2.32.5",
]

[[profiles.runtime.packages]]
name = "httpx"
constraint = ">=0.28.1,<0.29.0"
locked = "0.28.1"
tier = "supporting"
owner = "api-platform"
intent = "Async HTTP client for temporal workers."
review_days = 30
sources = [
  "pyproject.toml::[project.dependencies]",
  "constraints/production.txt::httpx==0.28.1",
]

[[profiles.runtime.packages]]
name = "temporalio"
constraint = ">=1.18.0,<2.0.0"
locked = "1.18.1"
tier = "core"
owner = "execution"
intent = "Workflow orchestration SDK for execution stage."
review_days = 14
sources = [
  "pyproject.toml::[project.dependencies]",
  "constraints/production.txt::temporalio==1.18.1",
]

[[profiles.runtime.packages]]
name = "trafilatura"
constraint = ">=2.0.0,<3.0.0"
locked = "2.0.0"
tier = "supporting"
owner = "ingestion"
intent = "Document parsing for ingestion connectors."
review_days = 45
sources = [
  "pyproject.toml::[project.dependencies]",
  "constraints/production.txt::trafilatura==2.0.0",
]

[[profiles.runtime.packages]]
name = "opensearch-py"
constraint = ">=3.0.0,<4.0.0"
locked = "3.0.0"
tier = "supporting"
owner = "retrieval"
intent = "Hybrid search client for lexical retrieval."
review_days = 30
sources = [
  "pyproject.toml::[project.dependencies]",
  "constraints/production.txt::opensearch-py==3.0.0",
]

[[profiles.runtime.packages]]
name = "packaging"
constraint = ">=25.0,<26.0"
locked = "25.0"
tier = "supporting"
owner = "dependency-stewards"
intent = "Semantic version parsing for orchestration tooling."
review_days = 90
sources = [
  "pyproject.toml::[project.dependencies]",
  "constraints/production.txt::packaging==25.0",
]

[[profiles.runtime.packages]]
name = "numpy"
constraint = "==2.3.2"
locked = "2.3.2"
tier = "core"
owner = "model-strategy"
intent = "Linear algebra backbone for embeddings and analytics."
review_days = 3
status = "exception"
notes = "Missing 2.3.3 macOS arm64 wheels; unblock via INFRA-812."
sources = [
  "pyproject.toml::[project.dependencies]",
  "constraints/production.txt::numpy==2.3.2",
]

[[profiles.runtime.packages]]
name = "torch"
constraint = ">=2.8,<2.9"
locked = "2.6.0"
tier = "core"
owner = "model-strategy"
intent = "Primary tensor compute runtime for on-device inference."
review_days = 7
status = "exception"
notes = "Holding for stable 2.8 wheels; monitor PYTORCH-132673."
sources = [
  "pyproject.toml::[project.dependencies]",
  "constraints/production.txt::torch==2.6.0",
]

[[profiles.runtime.packages]]
name = "sentence-transformers"
constraint = ">=5.1.1,<6.0.0"
locked = "5.1.1"
tier = "core"
owner = "model-strategy"
intent = "Embedding models for retrieval and evaluation."
review_days = 14
sources = [
  "pyproject.toml::[project.dependencies]",
  "constraints/production.txt::sentence-transformers==5.1.1",
]

[[profiles.runtime.packages]]
name = "fastapi"
constraint = ">=0.118.0,<0.119.0"
locked = "0.118.0"
tier = "core"
owner = "api-platform"
intent = "Public API surface for Prometheus services."
review_days = 14
sources = [
  "pyproject.toml::[project.dependencies]",
  "constraints/production.txt::fastapi==0.118.0",
]

[[profiles.runtime.packages]]
name = "uvicorn"
constraint = ">=0.37.0,<0.38.0"
locked = "0.37.0"
tier = "core"
owner = "api-platform"
intent = "ASGI server used for FastAPI runtime."
review_days = 14
extras = ["standard"]
sources = [
  "pyproject.toml::[project.dependencies]",
  "constraints/production.txt::uvicorn==0.37.0",
]

[[profiles.runtime.packages]]
name = "typer"
constraint = ">=0.19.2,<0.20.0"
locked = "0.19.2"
tier = "supporting"
owner = "platform-core"
intent = "CLI harness powering prometheus CLI entry points."
review_days = 30
sources = [
  "pyproject.toml::[project.dependencies]",
  "constraints/production.txt::typer==0.19.2",
]

[[profiles.runtime.packages]]
name = "argon2-cffi"
constraint = ">=25.1.0,<25.2.0"
locked = "25.1.0"
tier = "supporting"
owner = "security"
intent = "Password hashing for governance pathways."
review_days = 30
sources = [
  "pyproject.toml::[project.dependencies]",
  "constraints/production.txt::argon2-cffi==25.1.0",
]

[profiles.optional_pii]
owner = "security"
description = "Activated when PII scrubbing is required."
environments = ["worker"]
review_days = 30
condition = "extra:pii"

[[profiles.optional_pii.packages]]
name = "presidio-analyzer"
constraint = ">=2.2.352,<3.0.0"
owner = "security"
intent = "Detection of PII entities prior to storage."

[[profiles.optional_pii.packages]]
name = "presidio-anonymizer"
constraint = ">=2.2.352,<3.0.0"
owner = "security"
intent = "Anonymization pipeline for detected PII."

[[profiles.optional_pii.packages]]
name = "marisa-trie"
constraint = "==1.2.1"
owner = "security"
intent = "Dictionary trie backing Presidio analyzer."

[profiles.optional_observability]
owner = "observability"
description = "Telemetry export toggle for managed environments."
environments = ["api", "worker"]
review_days = 30
condition = "extra:observability"

[[profiles.optional_observability.packages]]
name = "opentelemetry-exporter-otlp-proto-grpc"
constraint = ">=1.37.0,<2.0.0"
owner = "observability"
intent = "Dense OTLP signal export."

[profiles.optional_rag]
owner = "retrieval"
description = "RAG experimentation toolkit."
environments = ["research", "evaluation"]
review_days = 30
condition = "extra:rag"

[[profiles.optional_rag.packages]]
name = "haystack-ai"
constraint = ">=2.18.0,<3.0.0"
owner = "retrieval"
intent = "Graph-based RAG orchestration."

[[profiles.optional_rag.packages]]
name = "dspy-ai"
constraint = ">=3.0.3,<4.0.0"
owner = "reasoning"
intent = "Programmatic prompting for reasoning stage."
marker = "python_version < '3.14'"
notes = "Pending upstream Python 3.14 compatibility."

[[profiles.optional_rag.packages]]
name = "ragas"
constraint = ">=0.3.0,<0.4.0"
owner = "evaluation"
intent = "Evaluation metrics for RAG quality."

[[profiles.optional_rag.packages]]
name = "trulens-eval"
constraint = ">=2.4.0,<3.0.0"
owner = "evaluation"
intent = "Live RAG tracing and feedback collection."

[[profiles.optional_rag.packages]]
name = "mteb"
constraint = ">=1.38.60,<2.0.0"
owner = "evaluation"
intent = "Benchmark dataset suite for embeddings."
marker = "python_version < '3.13'"
notes = "Waiting for Python 3.13 wheel support."

[profiles.optional_llm]
owner = "model-strategy"
description = "Local LLM enablement bundle."
environments = ["research"]
review_days = 30
condition = "extra:llm"

[[profiles.optional_llm.packages]]
name = "llama-cpp-python"
constraint = ">=0.3.0,<0.4.0"
owner = "model-strategy"
intent = "Llama.cpp bindings for CPU inference."
marker = "python_version < '3.12'"
notes = "CPU wheels unavailable for Python 3.12+."

[[profiles.optional_llm.packages]]
name = "sentencepiece"
constraint = ">=0.2.0,<0.3.0"
owner = "model-strategy"
intent = "Tokenization utilities for local LLM workloads."

[profiles.optional_governance]
owner = "security"
description = "Governance and RBAC integrations."
environments = ["api"]
review_days = 30
condition = "extra:governance"

[[profiles.optional_governance.packages]]
name = "python-keycloak"
constraint = ">=5.0.0,<6.0.0"
owner = "security"
intent = "Keycloak integration for access management."

[[profiles.optional_governance.packages]]
name = "openfga-sdk"
constraint = ">=0.9.0,<0.10.0"
owner = "security"
intent = "OpenFGA policy client for fine-grained auth."

[profiles.optional_integrations]
owner = "integrations"
description = "External systems connectors installed on demand."
environments = ["worker"]
review_days = 45
condition = "extra:integrations"

[[profiles.optional_integrations.packages]]
name = "boto3"
constraint = ">=1.35.0,<2.0.0"
owner = "integrations"
intent = "AWS integration toolkit."

[[profiles.optional_integrations.packages]]
name = "redis"
constraint = ">=6.0.0,<7.0.0"
owner = "integrations"
intent = "Redis cache client for connectors."

[[profiles.optional_integrations.packages]]
name = "cassandra-driver"
constraint = ">=3.29.2,<4.0.0"
owner = "integrations"
intent = "Cassandra connector for temporal archival."

[profiles.dev_tooling]
owner = "platform-core"
description = "Developer tooling required for local workflows and CI."
environments = ["dev", "ci"]
review_days = 30

[[profiles.dev_tooling.packages]]
name = "pytest"
locked = "8.4.2"
owner = "platform-core"
intent = "Primary unit test runner."

[[profiles.dev_tooling.packages]]
name = "pytest-cov"
locked = "7.0.0"
owner = "platform-core"
intent = "Coverage plugin for pytest."

[[profiles.dev_tooling.packages]]
name = "ruff"
locked = "0.13.2"
owner = "dependency-stewards"
intent = "Static analysis aligned with CI."

[[profiles.dev_tooling.packages]]
name = "check-jsonschema"
locked = "0.34.0"
owner = "dependency-stewards"
intent = "Validation of JSON/YAML artifacts."

[[profiles.dev_tooling.packages]]
name = "google-yamlfmt"
locked = "0.17.2"
owner = "dependency-stewards"
intent = "YAML formatting to satisfy workflow checks."

[exceptions]
owner = "dependency-stewards"
review_cadence_days = 3

[[exceptions.active]]
package = "numpy"
locked = "2.3.2"
expiry = "2025-10-18"
approved_by = "dependency-stewards"
notes = "Hold until upstream publishes universal wheels for 2.3.3+."

[[exceptions.active]]
package = "torch"
locked = "2.6.0"
expiry = "2025-11-15"
approved_by = "model-strategy"
notes = "Awaiting CUDA 12.4 compatible torch 2.8 wheels across matrix."

[[exceptions.active]]
package = "rapidfuzz"
locked = "3.13.0"
expiry = "2025-10-10"
approved_by = "retrieval"
notes = "Grace period while waiting on macOS universal2 wheels."

[quality]
owner = "dependency-stewards"
review_days = 14

[[quality.checks]]
name = "wheel-resolution"
severity = "critical"
approach = "cibuildwheel"
notes = "Ensure universal wheels resolve for linux, macOS (arm64/x86), and windows."

[[quality.checks]]
name = "sbom-diff"
severity = "high"
approach = "syft"
notes = "Diff SBOM against last release; block on supply-chain delta."

[[quality.checks]]
name = "known-vulnerabilities"
severity = "critical"
approach = "pip-audit"
notes = "Escalate CVEs \u2265 CVSS 7.0 to security within drift_escalation_days."
