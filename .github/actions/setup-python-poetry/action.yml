name: Setup Python and Poetry
description: Standardized setup for Python and Poetry across all workflows
inputs:
  python-version:
    description: Python version to use
    required: false
    default: "3.12"
  poetry-version:
    description: Poetry version to install
    required: false
    default: "1.8.3"
  cache-pip:
    description: Enable pip caching
    required: false
    default: "true"
  install-poetry-export:
    description: Install poetry-plugin-export
    required: false
    default: "false"
  working-directory:
    description: Working directory for Poetry commands
    required: false
    default: "."
outputs:
  poetry-version:
    description: Installed Poetry version
    value: ${{ steps.verify.outputs.poetry-version }}
  python-version:
    description: Installed Python version
    value: ${{ steps.setup-python.outputs.python-version }}
runs:
  using: composite
  steps:
    - name: Set up Python ${{ inputs.python-version }}
      id: setup-python
      uses: actions/setup-python@v6
      with:
        python-version: ${{ inputs.python-version }}
        cache: ${{ inputs.cache-pip == 'true' && 'pip' || '' }}
    
    - name: Install Poetry ${{ inputs.poetry-version }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        python -m pip install --upgrade pip
        pip install poetry==${{ inputs.poetry-version }}
        
        if [[ "${{ inputs.install-poetry-export }}" == "true" ]]; then
          pip install poetry-plugin-export
        fi
    
    - name: Verify installations
      id: verify
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        echo "python-version=$(python --version | cut -d' ' -f2)" >> "$GITHUB_OUTPUT"
        echo "poetry-version=$(poetry --version | grep -oP '\d+\.\d+\.\d+' | head -1)" >> "$GITHUB_OUTPUT"
        
        echo "Python: $(python --version)"
        echo "Poetry: $(poetry --version)"
        
        if [[ "${{ inputs.install-poetry-export }}" == "true" ]]; then
          poetry self show plugins | grep export || echo "::warning::poetry-plugin-export not found in plugins"
        fi
