[python]
expected_version = "3.12"
ensure_uv = true
pip_min_version = "25.0"
auto_upgrade_pip = true

[poetry]
binary = "poetry"
lock = true
extras = ["pii", "observability", "rag", "llm", "governance", "integrations"]
include_dev = true
create_archive = false
min_version = "2.2.2"
auto_install = true
self_update = true

[cleanup]
enabled = true
reset_vendor = false
reset_directories = ["vendor/wheelhouse", "vendor/models", "vendor/images"]
preserve_globs = [
  "vendor/wheelhouse/requirements.txt",
  "vendor/wheelhouse/platform_manifest.json",
  "vendor/wheelhouse/multi_platform_manifest.json",
  "vendor/wheelhouse/platforms/**/manifest.json",
]
remove_paths = ["vendor/CHECKSUMS.sha256"]
lfs_paths = ["vendor/wheelhouse", "vendor/models", "vendor/images"]
ensure_lfs_hooks = true
repair_lfs_hooks = true
normalize_symlinks = ["vendor/models"]
remove_orphan_wheels = true
metadata_directories = ["vendor/wheelhouse", "vendor/models", "vendor/images"]
metadata_patterns = [
  ".DS_Store",
  "._*",
  ".AppleDouble",
  "__MACOSX",
  "Icon?",
  "Thumbs.db",
  "desktop.ini",
]

[models]
sentence_transformers = ["sentence-transformers/all-MiniLM-L6-v2"]
cross_encoders = ["cross-encoder/ms-marco-MiniLM-L-6-v2"]
spacy = ["en_core_web_lg"]
skip_spacy = false
hf_token = ""

[containers]
images = [
  "opensearchproject/opensearch:2.13.0",
  "qdrant/qdrant:v1.11.0",
  "temporalio/auto-setup:1.26",
]
skip_pull = false

[git]
update_gitattributes = true
commit = true
commit_message = "chore: refresh offline packaging artefacts"
signoff = false
stage = [
  ".gitattributes",
  "configs/defaults/offline_package.toml",
  "docs/offline-packaging-orchestrator.md",
  "prometheus/packaging",
  "scripts/offline_package.py",
  "vendor",
]
ensure_branch = "offline-packaging-auto"
push = true
remote = "origin"
lfs_push = true
lfs_push_args = ["--all"]
lfs_push_include_branch = false
patterns = [
  "vendor/wheelhouse/** filter=lfs diff=lfs merge=lfs -text",
  "vendor/wheelhouse/**/*.whl filter=lfs diff=lfs merge=lfs -text",
  "vendor/wheelhouse/**/*.tar.gz filter=lfs diff=lfs merge=lfs -text",
  "vendor/wheelhouse/**/*.zip filter=lfs diff=lfs merge=lfs -text",
  "vendor/wheelhouse/platform/** filter=lfs diff=lfs merge=lfs -text",
  "vendor/models/** filter=lfs diff=lfs merge=lfs -text",
  "vendor/models/**/*.bin filter=lfs diff=lfs merge=lfs -text",
  "vendor/models/**/*.safetensors filter=lfs diff=lfs merge=lfs -text",
  "vendor/models/**/*.pkl filter=lfs diff=lfs merge=lfs -text",
  "vendor/models/**/*.pt filter=lfs diff=lfs merge=lfs -text",
  "vendor/models/**/*.pth filter=lfs diff=lfs merge=lfs -text",
  "vendor/models/**/*.onnx filter=lfs diff=lfs merge=lfs -text",
  "vendor/images/**/*.tar filter=lfs diff=lfs merge=lfs -text",
  "vendor/images/**/*.tar.gz filter=lfs diff=lfs merge=lfs -text",
  "vendor/images/**/*.docker filter=lfs diff=lfs merge=lfs -text",
  "vendor/data/** filter=lfs diff=lfs merge=lfs -text",
  "vendor/datasets/** filter=lfs diff=lfs merge=lfs -text",
]
pointer_check_paths = [
  "vendor/wheelhouse",
  "vendor/models",
  "vendor/images",
  "vendor/data",
  "vendor/datasets",
]

[telemetry]
enabled = true
emit_run_manifest = true
manifest_filename = "packaging-run.json"

[updates]
enabled = true
include_dev = true
report_filename = "outdated-packages.json"

[updates.auto]
enabled = false
max_update_type = "patch"
allow = []
deny = []
max_batch = 5

[commands]
retries = 3
retry_backoff_seconds = 2.0

# New performance optimization settings
[performance]
parallel_downloads = 4
lfs_batch_size = 100
lfs_timeout = 300
lfs_concurrent_transfers = 8
prefer_binary_wheels = true
wheel_cache_enabled = true
