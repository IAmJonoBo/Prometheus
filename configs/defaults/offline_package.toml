[python]
expected_version = "3.11"
ensure_uv = true
pip_min_version = "25.0"
auto_upgrade_pip = true

[poetry]
binary = "poetry"
lock = true
extras = ["pii"]
include_dev = true
create_archive = false
min_version = "1.7.0"
auto_install = false
self_update = false

[cleanup]
enabled = true
reset_vendor = false
reset_directories = [
  "vendor/wheelhouse",
  "vendor/models",
  "vendor/images",
]
preserve_globs = ["vendor/wheelhouse/requirements.txt"]
remove_paths = ["vendor/CHECKSUMS.sha256"]
lfs_paths = ["vendor/wheelhouse"]

[models]
sentence_transformers = ["sentence-transformers/all-MiniLM-L6-v2"]
cross_encoders = ["cross-encoder/ms-marco-MiniLM-L-6-v2"]
spacy = ["en_core_web_lg"]
skip_spacy = false
hf_token = ""

[containers]
images = [
  "opensearchproject/opensearch:2.13.0",
  "qdrant/qdrant:v1.11.0",
  "temporalio/auto-setup:1.26",
]
skip_pull = false

[git]
update_gitattributes = true
commit = true
commit_message = "chore: refresh offline packaging artefacts"
signoff = false
stage = [
  ".gitattributes",
  "configs/defaults/offline_package.toml",
  "docs/offline-packaging-orchestrator.md",
  "prometheus/packaging",
  "scripts/offline_package.py",
  "vendor",
]
ensure_branch = "offline-packaging-auto"
push = true
remote = "origin"
patterns = [
  "vendor/wheelhouse/** filter=lfs diff=lfs merge=lfs -text",
  "vendor/models/** filter=lfs diff=lfs merge=lfs -text",
  "vendor/images/**/*.tar filter=lfs diff=lfs merge=lfs -text",
]

[telemetry]
enabled = true
emit_run_manifest = true
manifest_filename = "packaging-run.json"

[updates]
enabled = true
include_dev = true
report_filename = "outdated-packages.json"

[updates.auto]
enabled = false
max_update_type = "patch"
allow = []
deny = []
max_batch = 5

[commands]
retries = 1
retry_backoff_seconds = 2.0
